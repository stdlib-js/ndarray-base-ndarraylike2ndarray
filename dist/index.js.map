{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getDType = require( '@stdlib/ndarray-dtype' );\nvar getShape = require( '@stdlib/ndarray-shape' );\nvar getStrides = require( '@stdlib/ndarray-strides' );\nvar getOffset = require( '@stdlib/ndarray-offset' );\nvar getOrder = require( '@stdlib/ndarray-order' );\nvar getData = require( '@stdlib/ndarray-data-buffer' );\nvar ndarray = require( '@stdlib/ndarray-base-ctor' );\nvar defaults = require( '@stdlib/ndarray-defaults' );\n\n\n// VARIABLES //\n\nvar DEFAULT_ORDER = defaults( 'order' );\n\n\n// MAIN //\n\n/**\n* Converts an ndarray-like object to an ndarray.\n*\n* @param {ndarrayLike} x - ndarray-like object\n* @param {string} x.dtype - data type\n* @param {Collection} x.data - data buffer\n* @param {NonNegativeIntegerArray} x.shape - dimensions\n* @param {IntegerArray} x.strides - stride lengths\n* @param {NonNegativeInteger} x.offset - index offset\n* @param {string} x.order - specifies whether `x` is row-major (C-style) or column-major (Fortran-style)\n* @returns {ndarray} ndarray\n*\n* @example\n* var array = require( '@stdlib/ndarray-array' );\n*\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ] );\n*\n* var out = ndarraylike2ndarray( x );\n* // returns <ndarray>\n*/\nfunction ndarraylike2ndarray( x ) {\n\treturn new ndarray( getDType( x ), getData( x ), getShape( x ), getStrides( x ), getOffset( x ), getOrder( x ) || DEFAULT_ORDER ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = ndarraylike2ndarray;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert an ndarray-like object to an ndarray.\n*\n* @module @stdlib/ndarray-base-ndarraylike2ndarray\n*\n* @example\n* var array = require( '@stdlib/ndarray-array' );\n* var ndarraylike2ndarray = require( '@stdlib/ndarray-base-ndarraylike2ndarray' );\n*\n* var x = array( [ [ 1, 2, 3 ], [ 4, 5, 6 ] ] );\n*\n* var out = ndarraylike2ndarray( x );\n* // returns <ndarray>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,uBAAwB,EAC5CC,EAAW,QAAS,uBAAwB,EAC5CC,EAAa,QAAS,yBAA0B,EAChDC,EAAY,QAAS,wBAAyB,EAC9CC,EAAW,QAAS,uBAAwB,EAC5CC,EAAU,QAAS,6BAA8B,EACjDC,EAAU,QAAS,2BAA4B,EAC/CC,EAAW,QAAS,0BAA2B,EAK/CC,EAAgBD,EAAU,OAAQ,EAyBtC,SAASE,EAAqBC,EAAI,CACjC,OAAO,IAAIJ,EAASN,EAAUU,CAAE,EAAGL,EAASK,CAAE,EAAGT,EAAUS,CAAE,EAAGR,EAAYQ,CAAE,EAAGP,EAAWO,CAAE,EAAGN,EAAUM,CAAE,GAAKF,CAAc,CACjI,CAKAT,EAAO,QAAUU,IC7BjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "getDType", "getShape", "getStrides", "getOffset", "getOrder", "getData", "ndarray", "defaults", "DEFAULT_ORDER", "ndarraylike2ndarray", "x", "main"]
}
